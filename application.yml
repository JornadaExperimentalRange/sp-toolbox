proxy:
  title: Landscape Toolbox Portal
  port: 8090 # use Port 8080 for ShinyProxy
  
  container-wait-time: 30000 # how long should we wait for the container to spin up (30s as default as this is enough for our Shiny apps)
  heartbeat-rate: 10000 # the user's browser will send a heartbeat call every heartbeat-rate milliseconds (10s as default)
  heartbeat-timeout: 60000 # if the server does not receive a heartbeat for heartbeat-timeout milliseconds, the relevant proxy will be released (60s as default)

  #### Set Up Usage Statistics Monitoring
  usage-stats-url: http://influxdb:8086/write?db=shinyproxy_usagestats # use InfluxDB to store usage statistics; can be in a different server
  # usage-stats-username: xxxx # influxdb username if needed
  # usage-stats-password: xxxx # influxdb password if needed

  #### OpenID Connect Authentication ####
  # authentication: openid # use openid auth framework
  # openid:
  #   roles-claim: cognito:groups # use the groups value passed by AWS cognito to identify user groups
  #   auth-url: # https://{cognito_domain_prefix}.auth.{region}.amazoncognito.com/oauth2/authorize
  #   token-url: # https://{cognito_domain_prefix}.auth.{region}.amazoncognito.com/oauth2/token
  #   jwks-url: # https://cognito-idp.{region}.amazonaws.com/{userPoolId}/.well-known/jwks.json
  #   logout-url: # https://{cognito_domain_prefix}.auth.{region}.amazoncognito.com/logout?client_id={client_id}&logout_uri={your_host_url}
  #   client-id:  # get this from AWS Cognito user pool management page
  #   client-secret:  # get this from AWS Cognito user pool management page
  
  #### Simple Authentication (for demo only, don't use in production) ####
  authentication: none
  admin-groups: admins
  users:
  - name: admin
    password: ldc~admn1
    groups: researchers
  - name: test
    password: ldc~tst1
    groups: researchers
  
  # Set the container backend: The container-backend can be one of docker (default), docker-swarm or Kubernetes
  container-backend: docker-swarm
  
  docker:
      internal-networking: true
  
  # Below is a list of Shiny apps and their config
  specs:
    - id: balanced-design-tool
      display-name: Balanced Design Tool
      container-cmd: ["R", "-e", "shiny::runApp('/home/docker/balanced-design-tool')"]
      container-image: landscapedatacommons/balanced-design-tool:4.2.1 # this need to be replaced with your own Shiny app in production
      access-groups: researchers # give specific access right to a group
      container-network: shiny-net
    - id: benchmark-exploration-tool
      display-name: Benchmark Exploration Tool
      container-cmd: ["R", "-e", "shiny::runApp('/home/docker/benchmark-exploration-tool')"]
      container-image: landscapedatacommons/benchmark-exploration-tool:4.2.1 # this need to be replaced with your own Shiny app in production
      access-groups: researchers # give specific access right to a group
      container-network: shiny-net

#server:
#  useForwardHeaders: true # this is very important to make the AWS Cognito auth works

logging:
  file:
    ./shinyproxy.log